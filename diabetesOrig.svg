<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="758.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="741" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="741" > </text>
<g id="frames">
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::operator[] (20,202,020 samples, 0.05%)</title><rect x="18.1" y="533" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="21.11" y="543.5" ></text>
</g>
<g >
<title>node::fs::FSReqAfterScope::Reject (10,101,010 samples, 0.03%)</title><rect x="311.3" y="501" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="314.31" y="511.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;float*, unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="18.7" y="469" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="21.71" y="479.5" ></text>
</g>
<g >
<title>ps (20,202,020 samples, 0.05%)</title><rect x="311.9" y="693" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="314.91" y="703.5" ></text>
</g>
<g >
<title>genetic::find_batched_fitness (9,777,777,680 samples, 24.64%)</title><rect x="17.5" y="581" width="290.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="20.51" y="591.5" >genetic::find_batched_fitness</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="517" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="527.5" ></text>
</g>
<g >
<title>v8::internal::OptimizingCompileDispatcher::CompileNext (10,101,010 samples, 0.03%)</title><rect x="311.6" y="629" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="314.61" y="639.5" ></text>
</g>
<g >
<title>start_thread (10,101,010 samples, 0.03%)</title><rect x="311.6" y="677" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="314.61" y="687.5" ></text>
</g>
<g >
<title>std::deque&lt;int, std::allocator&lt;int&gt; &gt;::emplace_back&lt;int&gt; (10,101,010 samples, 0.03%)</title><rect x="15.4" y="533" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="18.41" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;int, std::allocator&lt;int&gt; &gt;::end (10,101,010 samples, 0.03%)</title><rect x="15.7" y="533" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="18.71" y="543.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.1" y="581" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.11" y="591.5" ></text>
</g>
<g >
<title>genetic::get_depth (20,202,020 samples, 0.05%)</title><rect x="15.4" y="581" width="0.6" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="18.41" y="591.5" ></text>
</g>
<g >
<title>v8::internal::compiler::GraphReducer::ReduceNode (10,101,010 samples, 0.03%)</title><rect x="311.6" y="549" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="314.61" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;genetic::program, std::allocator&lt;genetic::program&gt; &gt; &gt;::construct&lt;std::vector&lt;genetic::program, std::allocator&lt;genetic::program&gt; &gt;, std::vector&lt;genetic::program, std::allocator&lt;genetic::program&gt; &gt; const&amp;&gt; (10,101,010 samples, 0.03%)</title><rect x="309.2" y="581" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="312.21" y="591.5" ></text>
</g>
<g >
<title>Builtins_PromiseFulfillReactionJob (10,101,010 samples, 0.03%)</title><rect x="311.3" y="325" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="314.31" y="335.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="581" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="591.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="311.9" y="597" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="314.91" y="607.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;int, int&amp;, int*&gt;::operator-- (10,101,010 samples, 0.03%)</title><rect x="15.4" y="501" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="18.41" y="511.5" ></text>
</g>
<g >
<title>[unknown] (29,494,949,200 samples, 74.34%)</title><rect x="312.8" y="581" width="877.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="315.81" y="591.5" >[unknown]</text>
</g>
<g >
<title>node::SpinEventLoopInternal (10,101,010 samples, 0.03%)</title><rect x="311.3" y="613" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="314.31" y="623.5" ></text>
</g>
<g >
<title>std::deque&lt;int, std::allocator&lt;int&gt; &gt;::size (10,101,010 samples, 0.03%)</title><rect x="308.3" y="549" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="311.30" y="559.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, genetic::node*, genetic::node*&gt; (10,101,010 samples, 0.03%)</title><rect x="14.8" y="549" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="17.81" y="559.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="645" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="655.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.6" y="613" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="623.5" ></text>
</g>
<g >
<title>node::fs::AfterOpenFileHandle (10,101,010 samples, 0.03%)</title><rect x="311.3" y="517" width="0.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="314.31" y="527.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="613" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="623.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="10.3" y="645" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.30" y="655.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="10.9" y="629" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.90" y="639.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.0" y="629" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.00" y="639.5" ></text>
</g>
<g >
<title>read (10,101,010 samples, 0.03%)</title><rect x="312.2" y="661" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="315.21" y="671.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="565" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="575.5" ></text>
</g>
<g >
<title>__GI___open64_nocancel (10,101,010 samples, 0.03%)</title><rect x="13.0" y="661" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="16.00" y="671.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="10.9" y="661" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.90" y="671.5" ></text>
</g>
<g >
<title>genetic_benchma (9,919,191,820 samples, 25.00%)</title><rect x="14.8" y="693" width="295.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="17.81" y="703.5" >genetic_benchma</text>
</g>
<g >
<title>_Fork (10,101,010 samples, 0.03%)</title><rect x="310.4" y="677" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="313.41" y="687.5" ></text>
</g>
<g >
<title>rcu_sched (10,101,010 samples, 0.03%)</title><rect x="312.5" y="693" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="315.51" y="703.5" ></text>
</g>
<g >
<title>__logf_fma (10,101,010 samples, 0.03%)</title><rect x="68.0" y="533" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="70.98" y="543.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="373" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="383.5" ></text>
</g>
<g >
<title>uv_spawn (10,101,010 samples, 0.03%)</title><rect x="311.3" y="101" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="314.31" y="111.5" ></text>
</g>
<g >
<title>v8::internal::compiler::SourcePositionTable::GetSourcePosition (10,101,010 samples, 0.03%)</title><rect x="311.6" y="501" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="314.61" y="511.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.6" y="581" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="591.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="581" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="591.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.9" y="629" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.91" y="639.5" ></text>
</g>
<g >
<title>[unknown] (30,303,030 samples, 0.08%)</title><rect x="11.5" y="677" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.50" y="687.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="405" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="415.5" ></text>
</g>
<g >
<title>node (50,505,050 samples, 0.13%)</title><rect x="310.4" y="693" width="1.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="313.41" y="703.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineImpl::OptimizeGraph (10,101,010 samples, 0.03%)</title><rect x="311.6" y="581" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="314.61" y="591.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.0" y="533" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.00" y="543.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="311.9" y="565" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="314.91" y="575.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.0" y="485" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.00" y="495.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="405" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="415.5" ></text>
</g>
<g >
<title>[unknown] (29,494,949,200 samples, 74.34%)</title><rect x="312.8" y="677" width="877.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="315.81" y="687.5" >[unknown]</text>
</g>
<g >
<title>v8::internal::Execution::TryRunMicrotasks (10,101,010 samples, 0.03%)</title><rect x="311.3" y="405" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="314.31" y="415.5" ></text>
</g>
<g >
<title>run_symbolic_regression (9,919,191,820 samples, 25.00%)</title><rect x="14.8" y="645" width="295.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="17.81" y="655.5" >run_symbolic_regression</text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.1" y="453" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.11" y="463.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.1" y="677" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.11" y="687.5" ></text>
</g>
<g >
<title>genetic::crossover (80,808,080 samples, 0.20%)</title><rect x="15.1" y="597" width="2.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="18.11" y="607.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="453" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="463.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="629" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="639.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="311.9" y="677" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="314.91" y="687.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="597" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="607.5" ></text>
</g>
<g >
<title>genetic::stack&lt;float, 20&gt;::pop (70,707,070 samples, 0.18%)</title><rect x="304.1" y="549" width="2.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="307.10" y="559.5" ></text>
</g>
<g >
<title>node::Start (10,101,010 samples, 0.03%)</title><rect x="311.3" y="661" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="314.31" y="671.5" ></text>
</g>
<g >
<title>__cosf_fma (121,212,120 samples, 0.31%)</title><rect x="53.3" y="533" width="3.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="56.26" y="543.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="311.9" y="645" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="314.91" y="655.5" ></text>
</g>
<g >
<title>PhiloxEngine::operator (20,202,020 samples, 0.05%)</title><rect x="308.6" y="565" width="0.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="311.60" y="575.5" ></text>
</g>
<g >
<title>genetic::execute_kernel&lt;20&gt; (9,393,939,300 samples, 23.68%)</title><rect x="24.7" y="549" width="279.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="27.72" y="559.5" >genetic::execute_kernel&lt;20&gt;</text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::PerformCheckpoint (10,101,010 samples, 0.03%)</title><rect x="311.3" y="437" width="0.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="314.31" y="447.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="312.5" y="645" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="315.51" y="655.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="661" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="671.5" ></text>
</g>
<g >
<title>[perf-1990.map] (10,101,010 samples, 0.03%)</title><rect x="311.3" y="277" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="314.31" y="287.5" ></text>
</g>
<g >
<title>std::stack&lt;int, std::deque&lt;int, std::allocator&lt;int&gt; &gt; &gt;::push (10,101,010 samples, 0.03%)</title><rect x="15.4" y="565" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="18.41" y="575.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="501" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="511.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="453" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (10,101,010 samples, 0.03%)</title><rect x="308.0" y="565" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="311.00" y="575.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="613" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="623.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="453" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="463.5" ></text>
</g>
<g >
<title>__libc_start_call_main (10,101,010 samples, 0.03%)</title><rect x="311.3" y="677" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="314.31" y="687.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.1" y="613" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.11" y="623.5" ></text>
</g>
<g >
<title>genetic::stack&lt;float, 20&gt;::pop (575,757,570 samples, 1.45%)</title><rect x="119.3" y="533" width="17.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="122.35" y="543.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="405" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="415.5" ></text>
</g>
<g >
<title>Builtins_RunMicrotasks (10,101,010 samples, 0.03%)</title><rect x="311.3" y="341" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="314.31" y="351.5" ></text>
</g>
<g >
<title>[unknown] (29,494,949,200 samples, 74.34%)</title><rect x="312.8" y="613" width="877.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="315.81" y="623.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="549" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="559.5" ></text>
</g>
<g >
<title>std::fill_n&lt;float*, unsigned long, float&gt; (10,101,010 samples, 0.03%)</title><rect x="18.7" y="453" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="21.71" y="463.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="389" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="399.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="549" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="559.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.0" y="565" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.00" y="575.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="661" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="671.5" ></text>
</g>
<g >
<title>cpuUsage.sh (40,404,040 samples, 0.10%)</title><rect x="13.3" y="693" width="1.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="16.30" y="703.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.3" y="613" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.30" y="623.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="597" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="607.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="629" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="639.5" ></text>
</g>
<g >
<title>genetic::stack&lt;float, 20&gt;::stack (212,121,210 samples, 0.53%)</title><rect x="297.8" y="533" width="6.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="300.79" y="543.5" ></text>
</g>
<g >
<title>multiply_high_low (10,101,010 samples, 0.03%)</title><rect x="308.9" y="501" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="311.91" y="511.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="325" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="335.5" ></text>
</g>
<g >
<title>genetic::program::operator= (10,101,010 samples, 0.03%)</title><rect x="309.5" y="613" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="312.51" y="623.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="453" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="463.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="501" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="511.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="309.8" y="677" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="312.81" y="687.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="437" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="447.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="373" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="383.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="501" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="511.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="277" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="287.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (10,101,010 samples, 0.03%)</title><rect x="311.3" y="165" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="314.31" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;genetic::program const*, std::vector&lt;genetic::program, std::allocator&lt;genetic::program&gt; &gt; &gt; (10,101,010 samples, 0.03%)</title><rect x="309.2" y="517" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="312.21" y="527.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (10,101,010 samples, 0.03%)</title><rect x="311.3" y="117" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="314.31" y="127.5" ></text>
</g>
<g >
<title>__fdimf (80,808,080 samples, 0.20%)</title><rect x="65.6" y="533" width="2.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="68.58" y="543.5" ></text>
</g>
<g >
<title>swapper (29,494,949,200 samples, 74.34%)</title><rect x="312.8" y="693" width="877.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="315.81" y="703.5" >swapper</text>
</g>
<g >
<title>v8::internal::Builtin_HandleApiCall (10,101,010 samples, 0.03%)</title><rect x="311.3" y="149" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="314.31" y="159.5" ></text>
</g>
<g >
<title>v8::internal::compiler::GraphReducer::Reduce (10,101,010 samples, 0.03%)</title><rect x="311.6" y="517" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="314.61" y="527.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (10,101,010 samples, 0.03%)</title><rect x="311.3" y="133" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="314.31" y="143.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.6" y="517" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="527.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="373" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;genetic::program, std::allocator&lt;genetic::program&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;genetic::program, std::allocator&lt;genetic::program&gt; &gt;, std::vector&lt;genetic::program, std::allocator&lt;genetic::program&gt; &gt; const&amp;&gt; (10,101,010 samples, 0.03%)</title><rect x="309.2" y="597" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="312.21" y="607.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="277" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="287.5" ></text>
</g>
<g >
<title>[perf-1990.map] (10,101,010 samples, 0.03%)</title><rect x="311.3" y="245" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="314.31" y="255.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="485" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="495.5" ></text>
</g>
<g >
<title>node::InternalCallbackScope::Close (10,101,010 samples, 0.03%)</title><rect x="311.3" y="453" width="0.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="314.31" y="463.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.1" y="549" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.11" y="559.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="405" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="415.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="549" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="559.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.9" y="597" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.91" y="607.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::RunMicrotasks (10,101,010 samples, 0.03%)</title><rect x="311.3" y="421" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="314.31" y="431.5" ></text>
</g>
<g >
<title>__GI___execve (10,101,010 samples, 0.03%)</title><rect x="13.6" y="661" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="16.60" y="671.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="311.9" y="533" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="314.91" y="543.5" ></text>
</g>
<g >
<title>node::MakeLibuvRequestCallback&lt;uv_fs_s, void  (10,101,010 samples, 0.03%)</title><rect x="311.3" y="533" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="314.31" y="543.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="10.9" y="645" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.90" y="655.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.0" y="645" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.00" y="655.5" ></text>
</g>
<g >
<title>std::stack&lt;int, std::deque&lt;int, std::allocator&lt;int&gt; &gt; &gt;::top (10,101,010 samples, 0.03%)</title><rect x="15.7" y="565" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="18.71" y="575.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="11.2" y="677" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.20" y="687.5" ></text>
</g>
<g >
<title>[unknown] (29,474,747,180 samples, 74.29%)</title><rect x="313.4" y="549" width="876.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="316.41" y="559.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.1" y="501" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.11" y="511.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="325" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="335.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="10.0" y="661" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="501" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="511.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="533" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="543.5" ></text>
</g>
<g >
<title>genetic::detail::is_terminal (212,121,210 samples, 0.53%)</title><rect x="110.9" y="517" width="6.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="113.94" y="527.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="373" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;float*, unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="308.0" y="501" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="311.00" y="511.5" ></text>
</g>
<g >
<title>genetic::build_program (10,101,010 samples, 0.03%)</title><rect x="14.8" y="597" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="17.81" y="607.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="565" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (10,101,010 samples, 0.03%)</title><rect x="18.7" y="533" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="21.71" y="543.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;float*, unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="308.0" y="517" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="311.00" y="527.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="469" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="479.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.6" y="501" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="511.5" ></text>
</g>
<g >
<title>std::copy&lt;genetic::node*, genetic::node*&gt; (10,101,010 samples, 0.03%)</title><rect x="309.5" y="597" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="312.51" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_default_initialize (10,101,010 samples, 0.03%)</title><rect x="308.0" y="549" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="311.00" y="559.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="421" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="431.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.0" y="597" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.00" y="607.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, genetic::node*, genetic::node*&gt; (10,101,010 samples, 0.03%)</title><rect x="309.5" y="549" width="0.3" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="312.51" y="559.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="261" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="271.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.9" y="645" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.91" y="655.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::random_access_iterator_tag&gt;::__copy_m&lt;genetic::node*, genetic::node*&gt; (10,101,010 samples, 0.03%)</title><rect x="309.5" y="533" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="312.51" y="543.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, genetic::node*, genetic::node*&gt; (10,101,010 samples, 0.03%)</title><rect x="309.5" y="565" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="312.51" y="575.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.6" y="549" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="559.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="517" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="527.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="309" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="319.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.1" y="517" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.11" y="527.5" ></text>
</g>
<g >
<title>std::__fill_a&lt;float*, float&gt; (10,101,010 samples, 0.03%)</title><rect x="18.7" y="421" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="21.71" y="431.5" ></text>
</g>
<g >
<title>genetic::stack&lt;float, 20&gt;::push (5,424,242,370 samples, 13.67%)</title><rect x="136.5" y="533" width="161.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="139.47" y="543.5" >genetic::stack&lt;float..</text>
</g>
<g >
<title>genetic::stack&lt;float, 20&gt;::push (60,606,060 samples, 0.15%)</title><rect x="306.2" y="549" width="1.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="309.20" y="559.5" ></text>
</g>
<g >
<title>uv_run (10,101,010 samples, 0.03%)</title><rect x="311.3" y="597" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="314.31" y="607.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (10,101,010 samples, 0.03%)</title><rect x="311.3" y="629" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="314.31" y="639.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.03%)</title><rect x="14.5" y="661" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.51" y="671.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="309" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="319.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="311.3" y="53" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="314.31" y="63.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="517" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="527.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.3" y="581" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.30" y="591.5" ></text>
</g>
<g >
<title>genetic::build_program (10,101,010 samples, 0.03%)</title><rect x="308.3" y="581" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="311.30" y="591.5" ></text>
</g>
<g >
<title>git (10,101,010 samples, 0.03%)</title><rect x="309.8" y="693" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="312.81" y="703.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="311.9" y="629" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="314.91" y="639.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="645" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="655.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="312.5" y="661" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="315.51" y="671.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="517" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="527.5" ></text>
</g>
<g >
<title>genetic::detail::evaluate_node (40,404,040 samples, 0.10%)</title><rect x="20.2" y="549" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="23.21" y="559.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="312.5" y="629" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="315.51" y="639.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.4" y="661" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.40" y="671.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.4" y="677" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.40" y="687.5" ></text>
</g>
<g >
<title>[unknown] (29,474,747,180 samples, 74.29%)</title><rect x="313.4" y="565" width="876.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="316.41" y="575.5" >[unknown]</text>
</g>
<g >
<title>genetic::detail::is_terminal (70,707,070 samples, 0.18%)</title><rect x="117.2" y="533" width="2.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="120.25" y="543.5" ></text>
</g>
<g >
<title>genetic::detail::is_nonterminal (303,030,300 samples, 0.76%)</title><rect x="108.2" y="533" width="9.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="111.23" y="543.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.0" y="501" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.00" y="511.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="312.5" y="677" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="315.51" y="687.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="565" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="575.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;genetic::node*, std::vector&lt;genetic::node, std::allocator&lt;genetic::node&gt; &gt; &gt;, genetic::node*&gt; (10,101,010 samples, 0.03%)</title><rect x="14.8" y="565" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="17.81" y="575.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="293" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="303.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.1" y="565" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.11" y="575.5" ></text>
</g>
<g >
<title>genetic::detail::arity (40,404,040 samples, 0.10%)</title><rect x="19.0" y="549" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="22.01" y="559.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="597" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="607.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.6" y="597" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="607.5" ></text>
</g>
<g >
<title>genetic::get_subtree (50,505,050 samples, 0.13%)</title><rect x="16.0" y="581" width="1.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="19.01" y="591.5" ></text>
</g>
<g >
<title>[perf-1990.map] (10,101,010 samples, 0.03%)</title><rect x="311.3" y="261" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="314.31" y="271.5" ></text>
</g>
<g >
<title>:1611 (20,202,020 samples, 0.05%)</title><rect x="10.6" y="693" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="13.60" y="703.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="437" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="447.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="453" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="463.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.0" y="549" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.00" y="559.5" ></text>
</g>
<g >
<title>irqbalance (10,101,010 samples, 0.03%)</title><rect x="310.1" y="693" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="313.11" y="703.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="389" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="399.5" ></text>
</g>
<g >
<title>std::lower_bound&lt;__gnu_cxx::__normal_iterator&lt;float*, std::vector&lt;float, std::allocator&lt;float&gt; &gt; &gt;, float&gt; (10,101,010 samples, 0.03%)</title><rect x="16.9" y="565" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="19.91" y="575.5" ></text>
</g>
<g >
<title>__GI___execve (10,101,010 samples, 0.03%)</title><rect x="14.2" y="677" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="17.21" y="687.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (10,101,010 samples, 0.03%)</title><rect x="311.3" y="645" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="314.31" y="655.5" ></text>
</g>
<g >
<title>/opt/saltstack/ (20,202,020 samples, 0.05%)</title><rect x="10.0" y="693" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>uv__async_io.part.3 (10,101,010 samples, 0.03%)</title><rect x="311.3" y="565" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="314.31" y="575.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="533" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="543.5" ></text>
</g>
<g >
<title>_int_free (10,101,010 samples, 0.03%)</title><rect x="13.9" y="661" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="16.91" y="671.5" ></text>
</g>
<g >
<title>node::InternalCallbackScope::~InternalCallbackScope (10,101,010 samples, 0.03%)</title><rect x="311.3" y="469" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="314.31" y="479.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="311.9" y="613" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="314.91" y="623.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="245" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;genetic::program const*, std::vector&lt;genetic::program, std::allocator&lt;genetic::program&gt; &gt; &gt;, genetic::program*, genetic::program&gt; (10,101,010 samples, 0.03%)</title><rect x="309.2" y="549" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="312.21" y="559.5" ></text>
</g>
<g >
<title>node::fs::FSReqPromise&lt;node::AliasedBufferBase&lt;double, v8::Float64Array&gt; &gt;::Reject (10,101,010 samples, 0.03%)</title><rect x="311.3" y="485" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="314.31" y="495.5" ></text>
</g>
<g >
<title>[genetic_benchmark] (20,202,020 samples, 0.05%)</title><rect x="52.7" y="533" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="55.66" y="543.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="405" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="415.5" ></text>
</g>
<g >
<title>[unknown] (29,494,949,200 samples, 74.34%)</title><rect x="312.8" y="645" width="877.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="315.81" y="655.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="581" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="591.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.1" y="645" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.11" y="655.5" ></text>
</g>
<g >
<title>genetic::node::operator= (10,101,010 samples, 0.03%)</title><rect x="309.5" y="517" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="312.51" y="527.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="293" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="303.5" ></text>
</g>
<g >
<title>__sinf_fma (70,707,070 samples, 0.18%)</title><rect x="68.3" y="533" width="2.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="71.28" y="543.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="485" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="495.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="645" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="655.5" ></text>
</g>
<g >
<title>[perf-1990.map] (10,101,010 samples, 0.03%)</title><rect x="311.3" y="197" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="314.31" y="207.5" ></text>
</g>
<g >
<title>philox_random_uint32 (20,202,020 samples, 0.05%)</title><rect x="308.6" y="549" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="311.60" y="559.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="597" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="607.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.1" y="597" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.11" y="607.5" ></text>
</g>
<g >
<title>uv__stream_open (10,101,010 samples, 0.03%)</title><rect x="311.3" y="85" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="314.31" y="95.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="10.0" y="677" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>[perf-1990.map] (10,101,010 samples, 0.03%)</title><rect x="311.3" y="181" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="314.31" y="191.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, genetic::node*, genetic::node*&gt; (10,101,010 samples, 0.03%)</title><rect x="14.8" y="533" width="0.3" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="17.81" y="543.5" ></text>
</g>
<g >
<title>std::stack&lt;int, std::deque&lt;int, std::allocator&lt;int&gt; &gt; &gt;::size (10,101,010 samples, 0.03%)</title><rect x="308.3" y="565" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.30" y="575.5" ></text>
</g>
<g >
<title>genetic::set_batched_fitness (9,777,777,680 samples, 24.64%)</title><rect x="17.5" y="597" width="290.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="20.51" y="607.5" >genetic::set_batched_fitness</text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="11.2" y="661" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.20" y="671.5" ></text>
</g>
<g >
<title>_dl_map_object (10,101,010 samples, 0.03%)</title><rect x="13.0" y="677" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="16.00" y="687.5" ></text>
</g>
<g >
<title>genetic::cpp_evolve (9,898,989,800 samples, 24.95%)</title><rect x="14.8" y="613" width="294.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="17.81" y="623.5" >genetic::cpp_evolve</text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.5" y="677" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.51" y="687.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;float*, std::vector&lt;float, std::allocator&lt;float&gt; &gt; &gt;, float, __gnu_cxx::__ops::_Iter_less_val&gt; (10,101,010 samples, 0.03%)</title><rect x="16.9" y="549" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="19.91" y="559.5" ></text>
</g>
<g >
<title>[unknown] (29,494,949,200 samples, 74.34%)</title><rect x="312.8" y="597" width="877.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="315.81" y="607.5" >[unknown]</text>
</g>
<g >
<title>uv__io_poll (10,101,010 samples, 0.03%)</title><rect x="311.3" y="581" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="314.31" y="591.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="311.9" y="581" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="314.91" y="591.5" ></text>
</g>
<g >
<title>genetic::symFit (9,909,090,810 samples, 24.97%)</title><rect x="14.8" y="629" width="294.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="17.81" y="639.5" >genetic::symFit</text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.3" y="629" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.30" y="639.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="613" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="623.5" ></text>
</g>
<g >
<title>genetic::subtree_mutation (10,101,010 samples, 0.03%)</title><rect x="308.3" y="597" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="311.30" y="607.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="421" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="431.5" ></text>
</g>
<g >
<title>std::__fill_a1&lt;float*, float&gt; (10,101,010 samples, 0.03%)</title><rect x="18.7" y="405" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="21.71" y="415.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.6" y="565" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="575.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="565" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="575.5" ></text>
</g>
<g >
<title>uv__work_done (10,101,010 samples, 0.03%)</title><rect x="311.3" y="549" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="314.31" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_default_initialize (10,101,010 samples, 0.03%)</title><rect x="18.7" y="517" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="21.71" y="527.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.3" y="661" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.30" y="671.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="469" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="479.5" ></text>
</g>
<g >
<title>cat (10,101,010 samples, 0.03%)</title><rect x="13.0" y="693" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="16.00" y="703.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;float*, unsigned long, float&gt; (10,101,010 samples, 0.03%)</title><rect x="18.7" y="501" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="21.71" y="511.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.0" y="517" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.00" y="527.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;genetic::program const*, std::vector&lt;genetic::program, std::allocator&lt;genetic::program&gt; &gt; &gt;, genetic::program*&gt; (10,101,010 samples, 0.03%)</title><rect x="309.2" y="533" width="0.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="312.21" y="543.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;float*, unsigned long, float&gt; (10,101,010 samples, 0.03%)</title><rect x="308.0" y="533" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="311.00" y="543.5" ></text>
</g>
<g >
<title>std::__fill_n_a&lt;float*, unsigned long, float&gt; (10,101,010 samples, 0.03%)</title><rect x="18.7" y="437" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="21.71" y="447.5" ></text>
</g>
<g >
<title>:1612 (10,101,010 samples, 0.03%)</title><rect x="11.2" y="693" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="14.20" y="703.5" ></text>
</g>
<g >
<title>std::__fill_n_a&lt;float*, unsigned long, float&gt; (10,101,010 samples, 0.03%)</title><rect x="308.0" y="469" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="311.00" y="479.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="645" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="655.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="311.0" y="357" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="314.01" y="367.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.6" y="645" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;int, std::allocator&lt;int&gt; &gt;::back (10,101,010 samples, 0.03%)</title><rect x="15.7" y="549" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="18.71" y="559.5" ></text>
</g>
<g >
<title>genetic::meanSquareError&lt;float&gt; (50,505,050 samples, 0.13%)</title><rect x="17.5" y="549" width="1.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="20.51" y="559.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::MachineOperatorOptimizationPhase, v8::internal::compiler::MachineOperatorReducer::SignallingNanPropagation&amp;&gt; (10,101,010 samples, 0.03%)</title><rect x="311.6" y="565" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="314.61" y="575.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="677" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_open (10,101,010 samples, 0.03%)</title><rect x="311.9" y="661" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="314.91" y="671.5" ></text>
</g>
<g >
<title>:1620 (10,101,010 samples, 0.03%)</title><rect x="12.4" y="693" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="15.40" y="703.5" ></text>
</g>
<g >
<title>philox_oneround (20,202,020 samples, 0.05%)</title><rect x="308.6" y="517" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="311.60" y="527.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (10,101,010 samples, 0.03%)</title><rect x="311.3" y="373" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="314.31" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, genetic::node*, genetic::node*&gt; (10,101,010 samples, 0.03%)</title><rect x="309.5" y="581" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="312.51" y="591.5" ></text>
</g>
<g >
<title>all (39,676,767,280 samples, 100%)</title><rect x="10.0" y="709" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>:1613 (30,303,030 samples, 0.08%)</title><rect x="11.5" y="693" width="0.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="14.50" y="703.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="421" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="431.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.1" y="469" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.11" y="479.5" ></text>
</g>
<g >
<title>genetic::compute_metric (50,505,050 samples, 0.13%)</title><rect x="17.5" y="565" width="1.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="20.51" y="575.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;genetic::node*, std::vector&lt;genetic::node, std::allocator&lt;genetic::node&gt; &gt; &gt;, genetic::node*&gt; (10,101,010 samples, 0.03%)</title><rect x="14.8" y="581" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="17.81" y="591.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="469" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="479.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="357" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="367.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (10,101,010 samples, 0.03%)</title><rect x="311.6" y="597" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="314.61" y="607.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.6" y="533" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="543.5" ></text>
</g>
<g >
<title>__GI___execve (20,202,020 samples, 0.05%)</title><rect x="310.7" y="677" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="313.71" y="687.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (10,101,010 samples, 0.03%)</title><rect x="311.3" y="389" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="314.31" y="399.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="517" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="527.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="357" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="367.5" ></text>
</g>
<g >
<title>[perf-1990.map] (10,101,010 samples, 0.03%)</title><rect x="311.3" y="229" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="314.31" y="239.5" ></text>
</g>
<g >
<title>intel_check_word.constprop.0 (10,101,010 samples, 0.03%)</title><rect x="309.8" y="661" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="312.81" y="671.5" ></text>
</g>
<g >
<title>Builtins_JSRunMicrotasksEntry (10,101,010 samples, 0.03%)</title><rect x="311.3" y="357" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="314.31" y="367.5" ></text>
</g>
<g >
<title>Builtins_AsyncFunctionAwaitResolveClosure (10,101,010 samples, 0.03%)</title><rect x="311.3" y="309" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="314.31" y="319.5" ></text>
</g>
<g >
<title>[perf-1990.map] (10,101,010 samples, 0.03%)</title><rect x="311.3" y="293" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="314.31" y="303.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.6" y="485" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="495.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::random_access_iterator_tag&gt;::__copy_m&lt;genetic::node*, genetic::node*&gt; (10,101,010 samples, 0.03%)</title><rect x="14.8" y="517" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="17.81" y="527.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.0" y="581" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.00" y="591.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="311.9" y="517" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="314.91" y="527.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.9" y="613" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.91" y="623.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::PlatformWorkerThread (10,101,010 samples, 0.03%)</title><rect x="311.6" y="661" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="314.61" y="671.5" ></text>
</g>
<g >
<title>insertionSortPrograms (10,101,010 samples, 0.03%)</title><rect x="309.5" y="629" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="312.51" y="639.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="469" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="479.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.1" y="661" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.11" y="671.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="661" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="671.5" ></text>
</g>
<g >
<title>[unknown] (29,494,949,200 samples, 74.34%)</title><rect x="312.8" y="629" width="877.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="315.81" y="639.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="310.7" y="629" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.71" y="639.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="421" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="431.5" ></text>
</g>
<g >
<title>[unknown] (29,494,949,200 samples, 74.34%)</title><rect x="312.8" y="661" width="877.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="315.81" y="671.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.1" y="629" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.11" y="639.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="311.3" y="69" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="314.31" y="79.5" ></text>
</g>
<g >
<title>philox_next4 (20,202,020 samples, 0.05%)</title><rect x="308.6" y="533" width="0.6" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="311.60" y="543.5" ></text>
</g>
<g >
<title>[unknown] (30,303,030 samples, 0.08%)</title><rect x="13.3" y="677" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.30" y="687.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="421" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="431.5" ></text>
</g>
<g >
<title>__libc_start_call_main (9,919,191,820 samples, 25.00%)</title><rect x="14.8" y="677" width="295.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="17.81" y="687.5" >__libc_start_call_main</text>
</g>
<g >
<title>:926 (10,101,010 samples, 0.03%)</title><rect x="12.7" y="693" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="15.70" y="703.5" ></text>
</g>
<g >
<title>genetic::tournament_kernel (20,202,020 samples, 0.05%)</title><rect x="308.6" y="597" width="0.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="311.60" y="607.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="11.8" y="661" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.80" y="671.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="613" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="623.5" ></text>
</g>
<g >
<title>[perf-1990.map] (10,101,010 samples, 0.03%)</title><rect x="311.3" y="213" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="314.31" y="223.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.3" y="597" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.30" y="607.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="357" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="367.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="469" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="479.5" ></text>
</g>
<g >
<title>v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (10,101,010 samples, 0.03%)</title><rect x="311.6" y="645" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="314.61" y="655.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="485" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="495.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="311.3" y="37" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="314.31" y="47.5" ></text>
</g>
<g >
<title>genetic::detail::evaluate_node (1,050,505,040 samples, 2.65%)</title><rect x="77.0" y="533" width="31.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="79.99" y="543.5" >ge..</text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="437" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="447.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.3" y="645" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.30" y="655.5" ></text>
</g>
<g >
<title>falcon-fx (10,101,010 samples, 0.03%)</title><rect x="14.5" y="693" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="17.51" y="703.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="389" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="399.5" ></text>
</g>
<g >
<title>std::__fill_a&lt;float*, float&gt; (10,101,010 samples, 0.03%)</title><rect x="308.0" y="453" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="311.00" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;int, std::allocator&lt;int&gt; &gt;::push_back (10,101,010 samples, 0.03%)</title><rect x="15.4" y="549" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="18.41" y="559.5" ></text>
</g>
<g >
<title>v8::internal::compiler::GraphReducer::ReduceTop (10,101,010 samples, 0.03%)</title><rect x="311.6" y="533" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="314.61" y="543.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.05%)</title><rect x="10.6" y="677" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.60" y="687.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="341" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="351.5" ></text>
</g>
<g >
<title>genetic::execute (9,717,171,620 samples, 24.49%)</title><rect x="19.0" y="565" width="289.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="22.01" y="575.5" >genetic::execute</text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="533" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="543.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="373" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="383.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="581" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="591.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="485" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;genetic::program, std::allocator&lt;genetic::program&gt; &gt;::vector (10,101,010 samples, 0.03%)</title><rect x="309.2" y="565" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="312.21" y="575.5" ></text>
</g>
<g >
<title>uniform_real_distribution_custom&lt;float&gt;::operator (10,101,010 samples, 0.03%)</title><rect x="17.2" y="565" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="20.21" y="575.5" ></text>
</g>
<g >
<title>uniform_int_distribution_custom&lt;int&gt;::operator (20,202,020 samples, 0.05%)</title><rect x="308.6" y="581" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="311.60" y="591.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="389" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="399.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="549" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;genetic::program, std::allocator&lt;genetic::program&gt; &gt;, std::allocator&lt;std::vector&lt;genetic::program, std::allocator&lt;genetic::program&gt; &gt; &gt; &gt;::push_back (10,101,010 samples, 0.03%)</title><rect x="309.2" y="613" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="312.21" y="623.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="311.9" y="549" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="314.91" y="559.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="341" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;int, std::allocator&lt;int&gt; &gt;::back (10,101,010 samples, 0.03%)</title><rect x="15.4" y="517" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="18.41" y="527.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.1" y="485" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.11" y="495.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="437" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="447.5" ></text>
</g>
<g >
<title>std::fill_n&lt;float*, unsigned long, float&gt; (10,101,010 samples, 0.03%)</title><rect x="308.0" y="485" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="311.00" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;float*, unsigned long&gt; (10,101,010 samples, 0.03%)</title><rect x="18.7" y="485" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="21.71" y="495.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="485" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="495.5" ></text>
</g>
<g >
<title>std::__fill_a1&lt;float*, float&gt; (10,101,010 samples, 0.03%)</title><rect x="308.0" y="437" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="311.00" y="447.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.3" y="565" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.30" y="575.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.1" y="533" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.11" y="543.5" ></text>
</g>
<g >
<title>v8::internal::OptimizedCompilationJob::ExecuteJob (10,101,010 samples, 0.03%)</title><rect x="311.6" y="613" width="0.3" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="314.61" y="623.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="533" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="543.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="310.4" y="501" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="313.41" y="511.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="12.7" y="341" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.70" y="351.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="661" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="671.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="437" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="447.5" ></text>
</g>
<g >
<title>genetic::detail::is_nonterminal (111,111,110 samples, 0.28%)</title><rect x="21.4" y="549" width="3.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="24.42" y="559.5" ></text>
</g>
<g >
<title>std::operator- (10,101,010 samples, 0.03%)</title><rect x="308.3" y="533" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="311.30" y="543.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="311.9" y="501" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="314.91" y="511.5" ></text>
</g>
<g >
<title>genetic::detail::arity (222,222,220 samples, 0.56%)</title><rect x="70.4" y="533" width="6.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="73.38" y="543.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.9" y="581" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.91" y="591.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="297.5" y="389" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.49" y="399.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="14.2" y="629" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.21" y="639.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.6" y="629" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="639.5" ></text>
</g>
<g >
<title>main (9,919,191,820 samples, 25.00%)</title><rect x="14.8" y="661" width="295.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="17.81" y="671.5" >main</text>
</g>
<g >
<title>std::_Deque_iterator&lt;int, int&amp;, int*&gt;::_Deque_iterator (10,101,010 samples, 0.03%)</title><rect x="15.7" y="517" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="18.71" y="527.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="10.9" y="613" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.90" y="623.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.03%)</title><rect x="13.0" y="613" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.00" y="623.5" ></text>
</g>
<g >
<title>__expf_fma (292,929,290 samples, 0.74%)</title><rect x="56.9" y="533" width="8.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="59.86" y="543.5" ></text>
</g>
</g>
</svg>
